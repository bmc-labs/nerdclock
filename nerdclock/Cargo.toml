[package]
name = "wordclock"
description = "Software for CAN controller word clock"

version = "0.1.0"
authors = [
  "Florian Eich <florian@bmc-labs.com>",
  "Jannik Sch√ºtz <jannik@bmc-labs.com>"
]
edition = "2018"

[package.metadata.docs.rs]
features = ["stm32f103", "rt", "stm32-usbd"]
default-target = "x86_64-unknown-linux-gnu"

[dependencies]
bxcan = "0.5.0"
cortex-m = "0.7.1"
cortex-m-rt = "0.6.13"
defmt = "0.2.1"
defmt-rtt = "0.2.0"
nb = "1.0"
panic-probe = { version = "0.2.0", features = ["print-defmt"] }
smart-leds = "0.3.0"
ws2812-timer-delay = { version = "0.3.0", features = ["slow"] }

[dependencies.embedded-hal]
version = "0.2.3"
features = ["unproven"]

[dependencies.stm32-usbd]
version = "0.5.0"
features = ["ram_access_1x16"]
optional = true

[dependencies.stm32f1xx-hal]
git = "https://github.com/cdbrkfxrpt/stm32f1xx-hal.git"
branch = "master"
features = ["stm32f103", "medium"]


[features]
# set logging levels here
default = [
  "defmt-default",
  # "dependency-a/defmt-trace",
]

# do NOT modify these features
defmt-default = []
defmt-trace = []
defmt-debug = []
defmt-info = []
defmt-warn = []
defmt-error = []

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
